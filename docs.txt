# https://codelabs.developers.google.com/codelabs/sheets-api/#2

# Option return formula
# https://github.com/trentsteel777/pygrdt/blob/master/analysisportal/views.py

#https://stackoverflow.com/a/54573017
nvm alias default ''; nvm install 14.1.0
npm install yarn -g
sudo apt install cmake

#https://stackoverflow.com/questions/91576/crti-o-file-missing
#https://stackoverflow.com/questions/6329887/compiling-problems-cannot-find-crt1-o
sudo apt-get install libc6-dev

#https://stackoverflow.com/questions/45498313/rails-assetsprecompile-yarn-executable-was-not-detected-in-the-system
npm install yarn -g

#https://askubuntu.com/questions/386265/media-change-please-insert-the-disc-labeled-when-trying-to-install-ruby-on-ra
sudo sed -i '/cdrom/d' /etc/apt/sources.lists

#https://stackoverflow.com/questions/28725955/how-do-i-test-a-single-file-using-jest
npm i -g jest-cli
jest premium.test.js
jest premium.test.js -t 'thirdFriday'
jest utils.test.js -t 'today'

#https://unix.stackexchange.com/questions/140350/linux-g-command-not-found
sudo apt-get install build-essential

#https://stackoverflow.com/questions/11104028/process-env-node-env-is-undefined
# INSTALLATION VM
vi ~/.bash_profile, then insert NODE_ENV=production

# Commit existing git project to a new repo in github
https://www.softwarelab.it/2018/10/12/adding-an-existing-project-to-github-using-the-command-line/


# Run a javascript file with node e.g.
node sheets.js









# GoogleSheets sample code
const { GoogleSpreadsheet } = require('google-spreadsheet');

// https://codelabs.developers.google.com/codelabs/sheets-api/#5
// https://console.developers.google.com/apis/credentials/wizard?api=sheets.googleapis.com&project=findpremiums
// https://www.fastcomet.com/tutorials/nodejs/google-spreadsheet-package
// https://www.npmjs.com/package/google-spreadsheet
async function run() {

  // spreadsheet key is the long id in the sheets URL
  const doc = new GoogleSpreadsheet('15U8xKl3Aleop4tZASViSOFAAmbGDTCiBYf9gsiXOj1Q');

  // use service account creds
  await doc.useServiceAccountAuth({
    client_email: "",
    private_key: ""
  });
  // OR load directly from json file if not in secure environment
  //await doc.useServiceAccountAuth(require('./client_secret.json'));
  // OR use API key -- only for read-only access to public sheets
  //doc.useApiKey('AIzaSyBOHAN1ksskYgUEILsWzLVciK2PPYnzYLM');

  await doc.loadInfo(); // loads document properties and worksheets
  const sheet = doc.sheetsByIndex[0]; 
  await sheet.loadCells('A1:E10'); // loads a range of cells

  const a1 = sheet.getCell(0, 0); // access cells using a zero-based index

  //const c6 = sheet.getCellByA1('C6'); // or A1 style notation

  // access everything about the cell
  console.log(a1.value);
  //console.log(a1.formula);
  //console.log(a1.formattedValue);

  //console.log(doc.title);
  //await doc.updateProperties({ title: 'renamed doc' });

  //const sheet = doc.sheetsByIndex[0]; // or use doc.sheetsById[id]
  //console.log(sheet.title);
  //console.log(sheet.rowCount);

  // adding / removing sheets
  //const newSheet = await doc.addSheet({ title: 'hot new sheet!' });
  //await newSheet.delete();
}











# Code to read from EJDB2
for (let i = 0; i < 3/* symbols.length */; i++) {
    const q = db.createQuery('/*', symbols[i]);

    for await (const doc of q.stream()) {
        console.log(`Found ${doc.id} : ${doc.json.underlyingSymbol}`);
    }
}

"https://query2.finance.yahoo.com/v7/finance/options/MSFT?formatted=true&lang=en-US&region=US&date=1592524800"
// get the next month out using yahoo functions
// select watchlist and loop over watch list
// log statements
//  get and store data -> 
// do analysis
// update google sheet

// data model -> symbol -> date -> optionchains

// 20200505
logging
analysis
print to google sheet
cut tag
install on odroid